{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/App/App.module.css","components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","components/App/App.jsx","index.js"],"names":["module","exports","ContactForm","state","name","number","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","props","onSubmit","resetState","className","s","contactForm","this","label","input","type","onChange","pattern","title","required","btn","Component","ContactList","contacts","onDeleteBtn","map","item","star","onClick","nanoid","Filter","filter","onFilterChange","App","id","handleAddContact","find","contact","alert","newContact","getVisibleContacts","toLowerCase","includes","handleDeleteContact","visibleContacts","app","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iIACAA,EAAOC,QAAU,CAAC,YAAc,mC,wCCAhCD,EAAOC,QAAU,CAAC,IAAM,mB,uCCAxBD,EAAOC,QAAU,CAAC,KAAO,0BAA0B,OAAS,4BAA4B,IAAM,yBAAyB,KAAO,4B,qKCExHC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,OAAQ,I,EAGVC,aAAe,SAAAC,GACb,MAAwBA,EAAEC,cAAlBJ,EAAR,EAAQA,KAAMK,EAAd,EAAcA,MACd,EAAKC,SAAL,eACGN,EAAOK,K,EAIZE,aAAe,SAAAJ,GACbA,EAAEK,iBACF,EAAKC,MAAMC,SAAS,EAAKX,OACzB,EAAKY,c,EAGPA,WAAa,WACX,EAAKL,SAAS,CAAEN,KAAM,GAAIC,OAAQ,M,4CAGpC,WACE,OACE,uBAAMW,UAAWC,IAAEC,YAAaJ,SAAUK,KAAKR,aAA/C,UACE,wBAAOK,UAAWC,IAAEG,MAApB,iBAEE,uBACEJ,UAAWC,IAAEI,MACbC,KAAK,OACLlB,KAAK,OACLK,MAAOU,KAAKhB,MAAMC,KAClBmB,SAAUJ,KAAKb,aACfkB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,OAIZ,wBAAOV,UAAWC,IAAEG,MAApB,mBAEE,uBACEJ,UAAWC,IAAEI,MACbC,KAAK,MACLlB,KAAK,SACLK,MAAOU,KAAKhB,MAAME,OAClBkB,SAAUJ,KAAKb,aACfkB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,OAGZ,wBAAQV,UAAWC,IAAEU,IAAKL,KAAK,SAA/B,gC,GArDkBM,aA6DX1B,I,gBCzCA2B,EApBK,SAAC,GAA+B,IAA7BC,EAA4B,EAA5BA,SAAUC,EAAkB,EAAlBA,YAC/B,OACE,oBAAIf,UAAWC,IAAEY,YAAjB,SACGC,EAASE,KAAI,gBAAG3B,EAAH,EAAGA,OAAQD,EAAX,EAAWA,KAAX,OACZ,qBAAmBY,UAAWC,IAAEgB,KAAhC,UACE,sBAAMjB,UAAWC,IAAEiB,KAAnB,oBACC9B,EAFH,IAES,sBAAMY,UAAWC,IAAEZ,OAAnB,SAA4BA,IACnC,wBACEW,UAAWC,IAAEU,IACbQ,QAAS,kBAAMJ,EAAY3B,IAC3BkB,KAAK,SAHP,sBAHOc,qB,iBCSFC,EAdA,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,eACxB,OACE,wBAAOvB,UAAWC,IAAEG,MAApB,kCAEE,uBACEJ,UAAWC,IAAEI,MACbC,KAAK,OACLb,MAAO6B,EACPf,SAAUgB,Q,iBCHZC,E,4MACJrC,MAAQ,CACN2B,SAAU,CACR,CAAEW,GAAI,OAAQrC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEoC,GAAI,OAAQrC,KAAM,iBAAkBC,OAAQ,aAC9C,CAAEoC,GAAI,OAAQrC,KAAM,gBAAiBC,OAAQ,aAC7C,CAAEoC,GAAI,OAAQrC,KAAM,iBAAkBC,OAAQ,cAEhDiC,OAAQ,I,EAGVI,iBAAmB,YAAuB,IAApBtC,EAAmB,EAAnBA,KAAMC,EAAa,EAAbA,OAI1B,GAH2B,EAAKF,MAAM2B,SAASa,MAC7C,SAAAC,GAAO,OAAIA,EAAQxC,OAASA,KAG5ByC,MAAM,GAAD,OAAIzC,EAAJ,gCADP,CAIA,IAAM0C,EAAa,CACjBL,GAAIL,cACJhC,OACAC,UAEF,EAAKK,UAAS,gBAAGoB,EAAH,EAAGA,SAAH,MAAmB,CAC/BA,SAAS,CAAEgB,GAAH,mBAAkBhB,U,EAI9BS,eAAiB,SAAAhC,GACf,EAAKG,SAAS,CACZ4B,OAAQ/B,EAAEC,cAAcC,S,EAI5BsC,mBAAqB,WACnB,OAAO,EAAK5C,MAAM2B,SAASQ,QAAO,SAAAM,GAAO,OACvCA,EAAQxC,KAAK4C,cAAcC,SAAS,EAAK9C,MAAMmC,OAAOU,mB,EAI1DE,oBAAsB,SAAA9C,GACpB,EAAKM,UAAS,kBAAmB,CAC/BoB,SADY,EAAGA,SACIQ,QAAO,SAAAM,GAAO,OAAIA,EAAQxC,OAASA,U,4CAI1D,WACE,IAAM+C,EAAkBhC,KAAK4B,qBAC7B,OACE,sBAAK/B,UAAWC,IAAEmC,IAAlB,UACE,2CACA,cAAC,EAAD,CACEtB,SAAUX,KAAKhB,MAAM2B,SACrBhB,SAAUK,KAAKuB,mBAEjB,0CACA,cAAC,EAAD,CACEJ,OAAQnB,KAAKhB,MAAMmC,OACnBC,eAAgBpB,KAAKoB,iBAEvB,cAAC,EAAD,CACET,SAAUqB,EACVpB,YAAaZ,KAAK+B,6B,GA/DVtB,aAsEHY,ICxEfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.42db03bf.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1Sh6d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__1uT32\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ContactList_item__13SDS\",\"number\":\"ContactList_number__1_pmh\",\"btn\":\"ContactList_btn__1henv\",\"star\":\"ContactList_star__3Ceoi\"};","import { Component } from 'react/cjs/react.production.min';\r\nimport s from './ContactForm.module.css';\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    name: '',\r\n    number: '',\r\n  };\r\n\r\n  handleChange = e => {\r\n    const { name, value } = e.currentTarget;\r\n    this.setState({\r\n      [name]: value,\r\n    });\r\n  };\r\n\r\n  handleSubmit = e => {\r\n    e.preventDefault();\r\n    this.props.onSubmit(this.state);\r\n    this.resetState();\r\n  };\r\n\r\n  resetState = () => {\r\n    this.setState({ name: '', number: '' });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <form className={s.contactForm} onSubmit={this.handleSubmit}>\r\n        <label className={s.label}>\r\n          Name\r\n          <input\r\n            className={s.input}\r\n            type=\"text\"\r\n            name=\"name\"\r\n            value={this.state.name}\r\n            onChange={this.handleChange}\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n            required\r\n          />\r\n        </label>\r\n\r\n        <label className={s.label}>\r\n          Number\r\n          <input\r\n            className={s.input}\r\n            type=\"tel\"\r\n            name=\"number\"\r\n            value={this.state.number}\r\n            onChange={this.handleChange}\r\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n            required\r\n          />\r\n        </label>\r\n        <button className={s.btn} type=\"submit\">\r\n          Add contact\r\n        </button>\r\n      </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ContactForm;\r\n","import { nanoid } from 'nanoid';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteBtn }) => {\r\n  return (\r\n    <ul className={s.ContactList}>\r\n      {contacts.map(({ number, name }) => (\r\n        <li key={nanoid()} className={s.item}>\r\n          <span className={s.star}>&#10031;</span>\r\n          {name}:<span className={s.number}>{number}</span>\r\n          <button\r\n            className={s.btn}\r\n            onClick={() => onDeleteBtn(name)}\r\n            type=\"button\"\r\n          >\r\n            Delete\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import s from './Filter.module.css';\r\n\r\nconst Filter = ({ filter, onFilterChange }) => {\r\n  return (\r\n    <label className={s.label}>\r\n      Find contacts by name\r\n      <input\r\n        className={s.input}\r\n        type=\"text\"\r\n        value={filter}\r\n        onChange={onFilterChange}\r\n      />\r\n    </label>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import { Component } from 'react/cjs/react.production.min';\nimport { nanoid } from 'nanoid';\nimport ContactForm from '../ContactForm/ContactForm';\nimport ContactList from '../ContactList/ContactList';\nimport Filter from '../Filter/Filter';\nimport s from './App.module.css';\n\nclass App extends Component {\n  state = {\n    contacts: [\n      { id: 'id-1', name: 'Rosie Simpson', number: '459-12-56' },\n      { id: 'id-2', name: 'Hermione Kline', number: '443-89-12' },\n      { id: 'id-3', name: 'Eden Clements', number: '645-17-79' },\n      { id: 'id-4', name: 'Annie Copeland', number: '227-91-26' },\n    ],\n    filter: '',\n  };\n\n  handleAddContact = ({ name, number }) => {\n    const isDuplicateContact = this.state.contacts.find(\n      contact => contact.name === name,\n    );\n    if (isDuplicateContact) {\n      alert(`${name} is already in contacts`);\n      return;\n    }\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n    this.setState(({ contacts }) => ({\n      contacts: [newContact, ...contacts],\n    }));\n  };\n\n  onFilterChange = e => {\n    this.setState({\n      filter: e.currentTarget.value,\n    });\n  };\n\n  getVisibleContacts = () => {\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase()),\n    );\n  };\n\n  handleDeleteContact = name => {\n    this.setState(({ contacts }) => ({\n      contacts: contacts.filter(contact => contact.name !== name),\n    }));\n  };\n\n  render() {\n    const visibleContacts = this.getVisibleContacts();\n    return (\n      <div className={s.app}>\n        <h1>Phonebook</h1>\n        <ContactForm\n          contacts={this.state.contacts}\n          onSubmit={this.handleAddContact}\n        />\n        <h2>Contacts</h2>\n        <Filter\n          filter={this.state.filter}\n          onFilterChange={this.onFilterChange}\n        />\n        <ContactList\n          contacts={visibleContacts}\n          onDeleteBtn={this.handleDeleteContact}\n        />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}